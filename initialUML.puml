@startuml
class snakeladder.game.FrameTutorial {
- String version
+ {static} void main(String[])
}
class snakeladder.game.GameInitialiser {
+ {static} void main(String[])
}
class snakeladder.game.Puppet {
- GamePane gamePane
- NavigationPane navigationPane
- int cellIndex
- int nbSteps
- Connection currentCon
- int y
- int dy
- boolean isAuto
- String puppetName
+ boolean isAuto()
+ void setAuto(boolean)
+ String getPuppetName()
+ void setPuppetName(String)
~ void go(int)
~ void resetToStartingPoint()
~ int getCellIndex()
- void moveToNextCell()
+ void act()
}
class snakeladder.utility.PropertiesLoader {
+ {static} String DEFAULT_DIRECTORY_PATH
+ {static} Properties loadPropertiesFile(String)
+ {static} List<Connection> loadSnakes(Properties)
+ {static} List<Connection> loadLadders(Properties)
}
class snakeladder.utility.ServicesRandom {
- {static} Random random
+ {static} void initServicesRandom(Long)
+ {static} Random get()
}
interface snakeladder.game.GamePlayCallback {
~ void finishGameWithResults(int,java.util.List<String>)
}
class snakeladder.game.Die {
- NavigationPane np
- int nb
+ void act()
}
class snakeladder.game.custom.CustomGGButton {
- int tag
+ int getTag()
+ void setTag(int)
}
class snakeladder.game.GamePane {
- NavigationPane np
- int numberOfPlayers
- int currentPuppetIndex
- List<Puppet> puppets
- List<Boolean> playerManualMode
- ArrayList<Connection> connections
~ Location startLocation
~ int animationStep
+ {static} int NUMBER_HORIZONTAL_CELLS
+ {static} int NUMBER_VERTICAL_CELLS
- int MAX_PUPPET_SPRITES
~ void setupPlayers(Properties)
~ void createSnakesLadders(Properties)
~ void setNavigationPane(NavigationPane)
~ void createGui()
~ Puppet getPuppet()
~ void switchToNextPuppet()
~ List<Puppet> getAllPuppets()
~ void resetAllPuppets()
+ int getNumberOfPlayers()
~ Connection getConnectionAt(Location)
~ {static} Location cellToLocation(int)
~ int x(int,Connection)
}
abstract class snakeladder.game.Connection {
~ Location locStart
~ Location locEnd
~ int cellStart
~ int cellEnd
~ String imagePath
+ Location getLocStart()
+ Location getLocEnd()
+ String getImagePath()
+ void setImagePath(String)
+ double xLocationPercent(int)
+ double yLocationPercent(int)
}
class snakeladder.game.NavigationPane {
- int DIE1_BUTTON_TAG
- int DIE2_BUTTON_TAG
- int DIE3_BUTTON_TAG
- int DIE4_BUTTON_TAG
- int DIE5_BUTTON_TAG
- int DIE6_BUTTON_TAG
- int RANDOM_ROLL_TAG
- Location handBtnLocation
- Location dieBoardLocation
- Location pipsLocation
- Location statusLocation
- Location statusDisplayLocation
- Location scoreLocation
- Location scoreDisplayLocation
- Location resultLocation
- Location resultDisplayLocation
- Location autoChkLocation
- Location toggleModeLocation
- Location die1Location
- Location die2Location
- Location die3Location
- Location die4Location
- Location die5Location
- Location die6Location
- GamePane gp
- GGButton handBtn
- GGButton die1Button
- GGButton die2Button
- GGButton die3Button
- GGButton die4Button
- GGButton die5Button
- GGButton die6Button
- GGTextField pipsField
- GGTextField statusField
- GGTextField resultField
- GGTextField scoreField
- boolean isAuto
- GGCheckButton autoChk
- boolean isToggle
- GGCheckButton toggleCheck
- int nbRolls
- boolean isGameOver
- Properties properties
- java.util.List<java.util.List<Integer>> dieValues
- GamePlayCallback gamePlayCallback
~ void setupDieValues()
~ void setGamePlayCallback(GamePlayCallback)
~ void setGamePane(GamePane)
~ void addDieButtons()
- int getDieValue()
~ void createGui()
~ void showPips(String)
~ void showStatus(String)
~ void showScore(String)
~ void showResult(String)
~ void prepareRoll(int)
~ void startMoving(int)
~ void prepareBeforeRoll()
+ void buttonClicked(GGButton)
- void roll(int)
+ void buttonPressed(GGButton)
+ void buttonReleased(GGButton)
+ void checkAuto()
}
class snakeladder.game.NavigationPane.SimulatedPlayer {
+ void run()
}
class snakeladder.game.NavigationPane.ManualDieButton {
+ void buttonPressed(GGButton)
+ void buttonReleased(GGButton)
+ void buttonClicked(GGButton)
}
class snakeladder.game.Snake {
}
class snakeladder.game.Ladder {
}
class snakeladder.utility.BackgroundDrawing {
+ {static} String SPRITES_PATH
- {static} double calculateDistance(Point,Point)
- {static} double calculateAngleRadian(Point,Point,Point)
- {static} int pixelLocation(double,int)
+ {static} void addImageToBackground(String,java.util.List<Connection>,int,int,String)
}


snakeladder.game.JFrame <|-- snakeladder.game.FrameTutorial
snakeladder.game.Actor <|-- snakeladder.game.Puppet
ch.aplu.jgamegrid.Actor <|-- snakeladder.game.Die
ch.aplu.jgamegrid.GGButton <|-- snakeladder.game.custom.CustomGGButton
snakeladder.game.GameGrid <|-- snakeladder.game.GamePane
snakeladder.game.GGButtonListener <|.. snakeladder.game.NavigationPane
snakeladder.game.GameGrid <|-- snakeladder.game.NavigationPane
snakeladder.game.NavigationPane +.. snakeladder.game.NavigationPane.SimulatedPlayer
snakeladder.game.Thread <|-- snakeladder.game.NavigationPane.SimulatedPlayer
snakeladder.game.NavigationPane +.. snakeladder.game.NavigationPane.ManualDieButton
snakeladder.game.GGButtonListener <|.. snakeladder.game.NavigationPane.ManualDieButton
snakeladder.game.Connection <|-- snakeladder.game.Snake
snakeladder.game.Connection <|-- snakeladder.game.Ladder
@enduml